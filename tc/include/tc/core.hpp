#pragma once

#include <array>
#include <functional>
#include <vector>
#include <string>

#include "util.hpp"
#include "cosets.hpp"
#include "group.hpp"

namespace tc {
    Cosets solve(const Group &group, const std::vector<Gen> &sub_gens, const Coset &bound = UNBOUNDED);
    
    // todo
    ///**
    // * Solve the cosets generated by sg_gens within the subgroup generated by g_gens of the group context
    // */
    //    tc::Cosets solve(
    //        const tc::Group &context,
    //        const std::vector<tc::Gen> &g_gens,
    //        const std::vector<tc::Gen> &sg_gens
    //    ) {
    //        // todo this should also be handled with 'global' generators.
    //        const auto proper_sg_gens = recontext_gens(context, g_gens, sg_gens);
    //
    //        return tc::solve(context.subgroup(g_gens), proper_sg_gens);
    //    }

}
